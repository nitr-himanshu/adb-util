name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Create version info file
      run: python create_version_info.py
    
    - name: Build Windows executable
      run: pyinstaller --onefile --name adb-util --paths src --add-data "src;src" --hidden-import PyQt6 --hidden-import PyQt6.QtCore --hidden-import PyQt6.QtGui --hidden-import PyQt6.QtWidgets --hidden-import qasync --hidden-import aiofiles --hidden-import psutil --hidden-import watchdog --collect-all PyQt6 --version-file version_info.py --exclude-module matplotlib --exclude-module numpy --exclude-module pandas --exclude-module PIL --exclude-module tkinter --uac-admin --noconsole main.py
    
    - name: Create Windows package
      run: |
        certutil -hashfile "dist\adb-util.exe" SHA256 > "dist\adb-util.exe.sha256"
        mkdir release-windows
        copy "dist\adb-util.exe" "release-windows\"
        copy "dist\adb-util.exe.sha256" "release-windows\"
        if (Test-Path "README.md") { copy "README.md" "release-windows\" }
        if (Test-Path "LICENSE") { copy "LICENSE" "release-windows\" }
        if (Test-Path "SYSTEM_REQUIREMENTS.md") { copy "SYSTEM_REQUIREMENTS.md" "release-windows\" }
        @"
        ADB-UTIL for Windows
        
        IMPORTANT: This application requires Android Debug Bridge (ADB) tools
        to be installed separately on your system.
        
        1. Install ADB tools from:
           https://developer.android.com/studio/releases/platform-tools
        2. Add ADB to your system PATH
        3. Run adb-util.exe
        
        See SYSTEM_REQUIREMENTS.md for detailed installation instructions.
        "@ | Out-File -FilePath "release-windows\README.txt" -Encoding UTF8
        Compress-Archive -Path "release-windows\*" -DestinationPath "adb-util-windows.zip"
    
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: adb-util-windows
        path: adb-util-windows.zip

  # build-linux:
  #   runs-on: ubuntu-22.04
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #   
  #   - name: Setup Python
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: '3.11'
  #   
  #   - name: Install system dependencies
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install -y \
  #         python3-dev \
  #         python3-pip \
  #         python3-venv \
  #         build-essential \
  #         qt6-base-dev \
  #         qt6-tools-dev \
  #         qt6-tools-dev-tools \
  #         libgl1-mesa-dev \
  #         libglib2.0-dev \
  #         libfontconfig1-dev \
  #         libdbus-1-dev \
  #         libxkbcommon-dev \
  #         libxkbcommon-x11-dev \
  #         libxcb-xinerama0-dev \
  #         libxcb-cursor0 \
  #         android-tools-adb
  #   
  #   - name: Cache pip dependencies
  #     uses: actions/cache@v4
  #     with:
  #       path: ~/.cache/pip
  #       key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
  #       restore-keys: |
  #         ${{ runner.os }}-pip-
  #   
  #   - name: Install Python dependencies
  #     run: |
  #       python3 -m pip install --upgrade pip
  #       pip install -r requirements.txt
  #       pip install pyinstaller
  #   
  #   - name: Build Linux executable
  #     run: |
  #       pyinstaller \
  #         --onefile \
  #         --name adb-util \
  #         --paths src \
  #         --add-data "src:src" \
  #         --hidden-import PyQt6 \
  #         --hidden-import PyQt6.QtCore \
  #         --hidden-import PyQt6.QtGui \
  #         --hidden-import PyQt6.QtWidgets \
  #         --hidden-import qasync \
  #         --hidden-import aiofiles \
  #         --hidden-import psutil \
  #         --hidden-import watchdog \
  #         --collect-all PyQt6 \
  #         --exclude-module matplotlib \
  #         --exclude-module numpy \
  #         --exclude-module pandas \
  #         --exclude-module PIL \
  #         --exclude-module tkinter \
  #         main.py
  #   
  #   - name: Make executable and create checksum
  #     run: |
  #       chmod +x dist/adb-util
  #       sha256sum dist/adb-util > dist/adb-util.sha256
  #   
  #   - name: Create Linux archive
  #     run: |
  #       mkdir release-linux
  #       cp dist/adb-util release-linux/
  #       cp dist/adb-util.sha256 release-linux/
  #       cp README.md release-linux/
  #       cp LICENSE release-linux/
  #       cp SYSTEM_REQUIREMENTS.md release-linux/
  #       echo "ADB-UTIL for Linux (Ubuntu 22.04+)" > release-linux/README.txt
  #       echo "" >> release-linux/README.txt
  #       echo "IMPORTANT: This application requires Android Debug Bridge (ADB) tools" >> release-linux/README.txt
  #       echo "to be installed separately on your system." >> release-linux/README.txt
  #       echo "" >> release-linux/README.txt
  #       echo "1. Install ADB tools:" >> release-linux/README.txt
  #       echo "   sudo apt-get install android-tools-adb" >> release-linux/README.txt
  #       echo "2. Install Qt6 runtime (if not already installed):" >> release-linux/README.txt
  #       echo "   sudo apt-get install qt6-base-dev" >> release-linux/README.txt
  #       echo "3. Run ./adb-util" >> release-linux/README.txt
  #       echo "" >> release-linux/README.txt
  #       echo "See SYSTEM_REQUIREMENTS.md for detailed installation instructions." >> release-linux/README.txt
  #       tar -czf adb-util-linux.tar.gz -C release-linux .
  #   
  #   - name: Upload Linux artifacts
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: adb-util-linux
  #       path: adb-util-linux.tar.gz

  create-release:
    needs: [build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: adb-util-windows
    
    # - name: Download Linux artifacts
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: adb-util-linux
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          adb-util-windows.zip
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## ADB-UTIL Release
          
          ### Important Note
          **ADB-UTIL requires Android Debug Bridge (ADB) tools to be installed separately on your system.**
          
          ### Downloads
          - **Windows**: Download `adb-util-windows.zip`
          
          ### Quick Installation
          
          #### Windows
          1. **Install ADB tools**: Download from [Android Platform Tools](https://developer.android.com/studio/releases/platform-tools)
          2. **Add ADB to PATH**: Add the extracted folder to your system PATH
          3. **Run ADB-UTIL**: Extract `adb-util-windows.zip` and run `adb-util.exe`
          
          ### Verification
          Test ADB installation with: `adb version`
          
          ### Security
          SHA256 checksums are included in the archive for verification.
          
          ### Documentation
          See `SYSTEM_REQUIREMENTS.md` in the archive for detailed installation instructions.
          
          ### Note
          Linux builds are temporarily disabled. Windows version is available.
        token: ${{ secrets.GITHUB_TOKEN }}
